{"version":3,"sources":["../../source/write/writeXlsxFileNode.js"],"names":["fs","path","os","Archive","generateWorkbookXml","generateWorkbookXmlRels","rels","contentTypes","generateSheets","writeXlsxFile","data","filePath","sheetName","sheet","sheetNames","sheets","schema","columns","headerStyle","fontFamily","fontSize","dateFormat","archive","getSharedStringsXml","getStylesXml","createTempDirectory","root","createDirectory","join","xl","_rels","worksheetsPath","promises","writeFile","id","push","Promise","all","directory","append","write","removeDirectory","contents","resolve","reject","error","mkdir","mkdtemp","tmpdir","directoryPath","rmdir","recursive"],"mappings":";;;;;;;;;AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,EAAP,MAAe,IAAf;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAOC,mBAAP,MAAgC,wBAAhC;AACA,OAAOC,uBAAP,MAAoC,6BAApC;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,SAASC,cAAT,QAA+B,wBAA/B;AAEA,wBAA8BC,aAA9B;AAAA;AAAA;;;4EAAe,iBAA6BC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,2EAUX,EAVW,EACdC,QADc,QACdA,QADc,EAENC,SAFM,QAEbC,KAFa,EAGNC,UAHM,QAGdC,MAHc,EAIdC,MAJc,QAIdA,MAJc,EAKdC,OALc,QAKdA,OALc,EAMdC,WANc,QAMdA,WANc,EAOdC,UAPc,QAOdA,UAPc,EAQdC,QARc,QAQdA,QARc,EASdC,UATc,QASdA,UATc;AAWRC,YAAAA,OAXQ,GAWE,IAAInB,OAAJ,CAAYQ,QAAZ,CAXF;AAAA,8BAiBVH,cAAc,CAAC;AAClBE,cAAAA,IAAI,EAAJA,IADkB;AAElBE,cAAAA,SAAS,EAATA,SAFkB;AAGlBE,cAAAA,UAAU,EAAVA,UAHkB;AAIlBE,cAAAA,MAAM,EAANA,MAJkB;AAKlBC,cAAAA,OAAO,EAAPA,OALkB;AAMlBC,cAAAA,WAAW,EAAXA,WANkB;AAOlBC,cAAAA,UAAU,EAAVA,UAPkB;AAQlBC,cAAAA,QAAQ,EAARA,QARkB;AASlBC,cAAAA,UAAU,EAAVA;AATkB,aAAD,CAjBJ,EAcbN,MAda,mBAcbA,MAda,EAebQ,mBAfa,mBAebA,mBAfa,EAgBbC,YAhBa,mBAgBbA,YAhBa,EA6Bd;AACA;AACA;;AA/Bc;AAAA,mBAgCKC,mBAAmB,EAhCxB;;AAAA;AAgCRC,YAAAA,IAhCQ;AAAA;AAAA,mBAiCGC,eAAe,CAAC1B,IAAI,CAAC2B,IAAL,CAAUF,IAAV,EAAgB,IAAhB,CAAD,CAjClB;;AAAA;AAiCRG,YAAAA,EAjCQ;AAAA;AAAA,mBAkCMF,eAAe,CAAC1B,IAAI,CAAC2B,IAAL,CAAUC,EAAV,EAAc,OAAd,CAAD,CAlCrB;;AAAA;AAkCRC,YAAAA,KAlCQ;AAAA;AAAA,mBAmCeH,eAAe,CAAC1B,IAAI,CAAC2B,IAAL,CAAUC,EAAV,EAAc,YAAd,CAAD,CAnC9B;;AAAA;AAmCRE,YAAAA,cAnCQ;AAqCRC,YAAAA,QArCQ,GAqCG,CAChBC,SAAS,CAAChC,IAAI,CAAC2B,IAAL,CAAUE,KAAV,EAAiB,mBAAjB,CAAD,EAAwCzB,uBAAuB,CAAC;AAAEU,cAAAA,MAAM,EAANA;AAAF,aAAD,CAA/D,CADO,EAEhBkB,SAAS,CAAChC,IAAI,CAAC2B,IAAL,CAAUC,EAAV,EAAc,cAAd,CAAD,EAAgCzB,mBAAmB,CAAC;AAAEW,cAAAA,MAAM,EAANA;AAAF,aAAD,CAAnD,CAFO,EAGhBkB,SAAS,CAAChC,IAAI,CAAC2B,IAAL,CAAUC,EAAV,EAAc,YAAd,CAAD,EAA8BL,YAAY,EAA1C,CAHO,EAIhBS,SAAS,CAAChC,IAAI,CAAC2B,IAAL,CAAUC,EAAV,EAAc,mBAAd,CAAD,EAAqCN,mBAAmB,EAAxD,CAJO,CArCH;;AA4Cd,6DAA2BR,MAA3B,iCAAmC;AAAA,yCAAtBmB,EAAsB,eAAtBA,EAAsB,EAAlBxB,KAAkB,eAAlBA,IAAkB;AAClCsB,cAAAA,QAAQ,CAACG,IAAT,CAAcF,SAAS,CAAChC,IAAI,CAAC2B,IAAL,CAAUG,cAAV,iBAAkCG,EAAlC,UAAD,EAA8CxB,KAA9C,CAAvB;AACA;;AA9Ca;AAAA,mBAgDR0B,OAAO,CAACC,GAAR,CAAYL,QAAZ,CAhDQ;;AAAA;AAkDdV,YAAAA,OAAO,CAACgB,SAAR,CAAkBT,EAAlB,EAAsB,IAAtB;AACAP,YAAAA,OAAO,CAACiB,MAAR,CAAejC,IAAf,EAAqB,aAArB;AACAgB,YAAAA,OAAO,CAACiB,MAAR,CAAehC,YAAf,EAA6B,qBAA7B;;AApDc,iBAsDVI,QAtDU;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAuDPW,OAAO,CAACkB,KAAR,EAvDO;;AAAA;AAAA;AAAA,mBAwDPC,eAAe,CAACf,IAAD,CAxDR;;AAAA;AAAA;AAAA;;AAAA;AAAA,6CA0DNJ,OAAO,CAACkB,KAAR,EA1DM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA8Df,SAASP,SAAT,CAAmBhC,IAAnB,EAAyByC,QAAzB,EAAmC;AAClC,SAAO,IAAIN,OAAJ,CAAY,UAACO,OAAD,EAAUC,MAAV,EAAqB;AACvC5C,IAAAA,EAAE,CAACiC,SAAH,CAAahC,IAAb,EAAmByC,QAAnB,EAA6B,OAA7B,EAAsC,UAACG,KAAD,EAAW;AAChD,UAAIA,KAAJ,EAAW;AACV,eAAOD,MAAM,CAACC,KAAD,CAAb;AACA;;AACDF,MAAAA,OAAO;AACP,KALD;AAMA,GAPM,CAAP;AAQA;;AAED,SAAShB,eAAT,CAAyB1B,IAAzB,EAA+B;AAC9B,SAAO,IAAImC,OAAJ,CAAY,UAACO,OAAD,EAAUC,MAAV,EAAqB;AACvC5C,IAAAA,EAAE,CAAC8C,KAAH,CAAS7C,IAAT,EAAe,UAAC4C,KAAD,EAAW;AACzB,UAAIA,KAAJ,EAAW;AACV,eAAOD,MAAM,CAACC,KAAD,CAAb;AACA;;AACDF,MAAAA,OAAO,CAAC1C,IAAD,CAAP;AACA,KALD;AAMA,GAPM,CAAP;AAQA;;AAED,SAASwB,mBAAT,GAA+B;AAC9B,SAAO,IAAIW,OAAJ,CAAY,UAACO,OAAD,EAAUC,MAAV,EAAqB;AACvC5C,IAAAA,EAAE,CAAC+C,OAAH,CAAW9C,IAAI,CAAC2B,IAAL,CAAU1B,EAAE,CAAC8C,MAAH,EAAV,EAAuB,mBAAvB,CAAX,EAAwD,UAACH,KAAD,EAAQI,aAAR,EAA0B;AACjF,UAAIJ,KAAJ,EAAW;AACV,eAAOD,MAAM,CAACC,KAAD,CAAb;AACA;;AACDF,MAAAA,OAAO,CAACM,aAAD,CAAP;AACA,KALD;AAMA,GAPM,CAAP;AAQA;;AAED,SAASR,eAAT,CAAyBxC,IAAzB,EAA+B;AAC9B,SAAO,IAAImC,OAAJ,CAAY,UAACO,OAAD,EAAUC,MAAV,EAAqB;AACvC5C,IAAAA,EAAE,CAACkD,KAAH,CAASjD,IAAT,EAAe;AAAEkD,MAAAA,SAAS,EAAE;AAAb,KAAf,EAAoC,UAACN,KAAD,EAAW;AAC9C,UAAIA,KAAJ,EAAW;AACV,eAAOD,MAAM,CAACC,KAAD,CAAb;AACA;;AACDF,MAAAA,OAAO,CAAC1C,IAAD,CAAP;AACA,KALD;AAMA,GAPM,CAAP;AAQA","sourcesContent":["import fs from 'fs'\r\nimport path from 'path'\r\nimport os from 'os'\r\n\r\nimport Archive from './archive'\r\n\r\nimport generateWorkbookXml from './statics/workbook.xml'\r\nimport generateWorkbookXmlRels from './statics/workbook.xml.rels'\r\nimport rels from './statics/rels'\r\nimport contentTypes from './statics/[Content_Types].xml'\r\n\r\nimport { generateSheets } from './writeXlsxFile.common'\r\n\r\nexport default async function writeXlsxFile(data, {\r\n\tfilePath,\r\n  sheet: sheetName,\r\n\tsheets: sheetNames,\r\n\tschema,\r\n\tcolumns,\r\n\theaderStyle,\r\n\tfontFamily,\r\n\tfontSize,\r\n\tdateFormat\r\n} = {}) {\r\n\tconst archive = new Archive(filePath)\r\n\r\n\tconst {\r\n\t\tsheets,\r\n\t\tgetSharedStringsXml,\r\n\t\tgetStylesXml\r\n\t} = generateSheets({\r\n\t\tdata,\r\n\t\tsheetName,\r\n\t\tsheetNames,\r\n\t\tschema,\r\n\t\tcolumns,\r\n\t\theaderStyle,\r\n\t\tfontFamily,\r\n\t\tfontSize,\r\n\t\tdateFormat\r\n\t})\r\n\r\n\t// There doesn't seem to be a way to just append a file into a subdirectory\r\n\t// in `archiver` library, hence using a hacky temporary directory workaround.\r\n\t// https://www.npmjs.com/package/archiver\r\n\tconst root = await createTempDirectory()\r\n\tconst xl = await createDirectory(path.join(root, 'xl'))\r\n\tconst _rels = await createDirectory(path.join(xl, '_rels'))\r\n\tconst worksheetsPath = await createDirectory(path.join(xl, 'worksheets'))\r\n\r\n\tconst promises = [\r\n\t\twriteFile(path.join(_rels, 'workbook.xml.rels'), generateWorkbookXmlRels({ sheets })),\r\n\t\twriteFile(path.join(xl, 'workbook.xml'), generateWorkbookXml({ sheets })),\r\n\t\twriteFile(path.join(xl, 'styles.xml'), getStylesXml()),\r\n\t\twriteFile(path.join(xl, 'sharedStrings.xml'), getSharedStringsXml())\r\n\t]\r\n\r\n\tfor (const { id, data } of sheets) {\r\n\t\tpromises.push(writeFile(path.join(worksheetsPath, `sheet${id}.xml`), data))\r\n\t}\r\n\r\n\tawait Promise.all(promises)\r\n\r\n\tarchive.directory(xl, 'xl')\r\n\tarchive.append(rels, '_rels/.rels')\r\n\tarchive.append(contentTypes, '[Content_Types].xml')\r\n\r\n\tif (filePath) {\r\n\t\tawait archive.write()\r\n\t\tawait removeDirectory(root)\r\n\t} else {\r\n\t\treturn archive.write()\r\n\t}\r\n}\r\n\r\nfunction writeFile(path, contents) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tfs.writeFile(path, contents, 'utf-8', (error) => {\r\n\t\t\tif (error) {\r\n\t\t\t\treturn reject(error)\r\n\t\t\t}\r\n\t\t\tresolve()\r\n\t\t})\r\n\t})\r\n}\r\n\r\nfunction createDirectory(path) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tfs.mkdir(path, (error) => {\r\n\t\t\tif (error) {\r\n\t\t\t\treturn reject(error)\r\n\t\t\t}\r\n\t\t\tresolve(path)\r\n\t\t})\r\n\t})\r\n}\r\n\r\nfunction createTempDirectory() {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tfs.mkdtemp(path.join(os.tmpdir(), 'write-excel-file-'), (error, directoryPath) => {\r\n\t\t\tif (error) {\r\n\t\t\t\treturn reject(error)\r\n\t\t\t}\r\n\t\t\tresolve(directoryPath)\r\n\t\t})\r\n\t})\r\n}\r\n\r\nfunction removeDirectory(path) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tfs.rmdir(path, { recursive: true }, (error) => {\r\n\t\t\tif (error) {\r\n\t\t\t\treturn reject(error)\r\n\t\t\t}\r\n\t\t\tresolve(path)\r\n\t\t})\r\n\t})\r\n}"],"file":"writeXlsxFileNode.js"}